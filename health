
==============================================================================
dressing: require("dressing.health").check()

dressing.nvim ~
- OK vim.ui.input active
- OK vim.ui.select active: telescope

==============================================================================
lazy: require("lazy.health").check()

lazy.nvim ~
- {lazy.nvim} version `11.14.1`
- OK {git} `version 2.46.0`
- OK no existing packages found by other package managers
- OK packer_compiled.lua not found

luarocks ~
- checking `luarocks` installation
- OK no plugins require `luarocks`, so you can ignore any warnings below
- OK {luarocks} `/sbin/luarocks 3.11.1`
- WARNING `lua` version `5.1` needed, but found `Lua 5.4.7  Copyright (C) 1994-2024 Lua.org, PUC-Rio`
- WARNING {lua5.1} or {lua} or {lua-5.1} version `5.1` not installed

==============================================================================
luasnip: require("luasnip.health").check()

luasnip ~
- WARNING             For Variable/Placeholder-transformations, luasnip requires
              the jsregexp library. See `:help |luasnip-lsp-snippets-transformations`| for advice


==============================================================================
mason: require("mason.health").check()

mason.nvim ~
- OK mason.nvim version v1.10.0
- OK PATH: prepend
- OK Providers:
    mason.providers.registry-api
    mason.providers.client
- OK neovim version >= 0.7.0

mason.nvim [Registries] ~
- OK Registry `github.com/mason-org/mason-registry version: 2024-09-11-zigzag-plaice` is installed.

mason.nvim [Core utils] ~
- OK unzip: `UnZip 6.00 of 20 April 2009, by Info-ZIP.  Maintained by C. Spieler.  Send`
- OK wget: `GNU Wget 1.24.5 built on linux-gnu.`
- OK curl: `curl 8.9.1 (x86_64-pc-linux-gnu) libcurl/8.9.1 OpenSSL/3.3.1 zlib/1.3.1 brotli/1.1.0 zstd/1.5.6 libidn2/2.3.7 libpsl/0.21.5 libssh2/1.11.0 nghttp2/1.62.1 nghttp3/1.5.0`
- OK gzip: `gzip 1.13`
- OK tar: `tar (GNU tar) 1.35`
- OK bash: `GNU bash, version 5.2.32(1)-release (x86_64-pc-linux-gnu)`
- OK sh: `Ok`

mason.nvim [Languages] ~
- WARNING Go: not available
  - ADVICE:
    - spawn: go failed with exit code - and signal -. go is not executable
- WARNING Composer: not available
  - ADVICE:
    - spawn: composer failed with exit code - and signal -. composer is not executable
- WARNING PHP: not available
  - ADVICE:
    - spawn: php failed with exit code - and signal -. php is not executable
- WARNING cargo: not available
  - ADVICE:
    - spawn: cargo failed with exit code - and signal -. cargo is not executable
- OK node: `v20.16.0`
- OK Ruby: `ruby 3.2.4 (2024-04-23 revision af471c0e01) [x86_64-linux]`
- OK luarocks: `/sbin/luarocks 3.11.1`
- WARNING julia: not available
  - ADVICE:
    - spawn: julia failed with exit code - and signal -. julia is not executable
- OK python: `Python 3.12.5`
- OK java: `openjdk version "18.0.2.1" 2022-08-18`
- OK JAVA_HOME: `openjdk version "18.0.2.1" 2022-08-18`
- OK npm: `10.8.1`
- OK RubyGem: `3.4.19`
- OK javac: `javac 18.0.2.1`
- OK pip: `pip 24.2 from /usr/lib/python3.12/site-packages/pip (python 3.12)`
- OK python venv: `Ok`

mason.nvim [GitHub] ~
- OK GitHub API rate limit. Used: 0. Remaining: 60. Limit: 60. Reset: Thu 12 Sep 2024 03:17:23 PM CEST.
  Install and authenticate via gh-cli to increase rate limit.

==============================================================================
nvim: require("nvim.health").check()

Configuration ~
- OK no issues found

Runtime ~
- OK $VIMRUNTIME: /usr/share/nvim/runtime

Performance ~
- OK Build type: Release

Remote Plugins ~
- OK Up to date

terminal ~
- key_backspace (kbs) terminfo entry: `key_backspace=\177`
- key_dc (kdch1) terminfo entry: `key_dc=\E[3~`
- $TERM_PROGRAM="tmux"
- $COLORTERM="truecolor"

tmux ~
- OK escape-time: 0
- WARNING `focus-events` is not enabled. |'autoread'| may not work.
  - ADVICE:
    - (tmux 1.9+ only) Set `focus-events` in ~/.tmux.conf:
      set-option -g focus-events on
- $TERM: screen-256color

External Tools ~
- WARNING ripgrep not available

==============================================================================
nvim-treesitter: require("nvim-treesitter.health").check()

Installation ~
- WARNING `tree-sitter` executable not found (parser generator, only needed for :TSInstallFromGrammar, not required for :TSInstall)
- OK `node` found v20.16.0 (only needed for :TSInstallFromGrammar)
- OK `git` executable found.
- OK `cc` executable found. Selected from { vim.NIL, "cc", "gcc", "clang", "cl", "zig" }
  Version: cc (GCC) 14.2.1 20240805
- OK Neovim was compiled with tree-sitter runtime ABI version 14 (required >=13). Parsers must be compatible with runtime ABI.

OS Info:
{
  machine = "x86_64",
  release = "6.6.47-1-lts",
  sysname = "Linux",
  version = "#1 SMP PREEMPT_DYNAMIC Mon, 19 Aug 2024 05:13:57 +0000"
} ~

Parser/Features         H L F I J
  - bash                ✓ ✓ ✓ . ✓
  - c                   ✓ ✓ ✓ ✓ ✓
  - cpp                 ✓ ✓ ✓ ✓ ✓
  - dockerfile          ✓ . . . ✓
  - json                ✓ ✓ ✓ ✓ .
  - lua                 ✓ ✓ ✓ ✓ ✓
  - markdown            ✓ . ✓ ✓ ✓
  - markdown_inline     ✓ . . . ✓
  - python              ✓ ✓ ✓ ✓ ✓
  - query               ✓ ✓ ✓ ✓ ✓
  - vim                 ✓ ✓ ✓ . ✓
  - vimdoc              ✓ . . . ✓

  Legend: H[ighlight], L[ocals], F[olds], I[ndents], In[j]ections
         +) multiple parsers found, only one will be used
         x) errors found in the query, try to run :TSUpdate {lang} ~

==============================================================================
provider.clipboard: require("provider.clipboard.health").check()

Clipboard (optional) ~
- OK Clipboard tool found: wl-copy

==============================================================================
provider.node: require("provider.node.health").check()

Node.js provider (optional) ~
- Disabled (loaded_node_provider=0).

==============================================================================
provider.perl: require("provider.perl.health").check()

Perl provider (optional) ~
- Disabled (loaded_perl_provider=0).

==============================================================================
provider.python: require("provider.python.health").check()

Python 3 provider (optional) ~
- Using: g:python3_host_prog = "/bin/python3"
- Executable: /bin/python3
- Python version: 3.12.5
- pynvim version: 0.5.0
- OK Latest pynvim is installed.

Python virtualenv ~
- OK no $VIRTUAL_ENV

==============================================================================
provider.ruby: require("provider.ruby.health").check()

Ruby provider (optional) ~
- Disabled (loaded_ruby_provider=0).

==============================================================================
rainbow-delimiters: require("rainbow-delimiters.health").check()

Custom strategies ~
- OK Valid custom default strategy.

Custom queries ~
- OK Valid custom default query

Custom highlight groups ~
- OK Highlight group 'RainbowDelimiterRed' defined.
- OK Highlight group 'RainbowDelimiterYellow' defined.
- OK Highlight group 'RainbowDelimiterBlue' defined.
- OK Highlight group 'RainbowDelimiterOrange' defined.
- OK Highlight group 'RainbowDelimiterGreen' defined.
- OK Highlight group 'RainbowDelimiterViolet' defined.
- OK Highlight group 'RainbowDelimiterCyan' defined.

==============================================================================
telescope: require("telescope.health").check()

Checking for required plugins ~
- OK plenary installed.
- OK nvim-treesitter installed.

Checking external dependencies ~
- ERROR rg: not found. `live-grep` finder will not function without [BurntSushi/ripgrep](https://github.com/BurntSushi/ripgrep) installed.
- WARNING fd: not found. Install [sharkdp/fd](https://github.com/sharkdp/fd) for extended capabilities

===== Installed extensions ===== ~

Telescope Extension: `fzf` ~
- OK lib working as expected
- OK file_sorter correctly configured
- OK generic_sorter correctly configured

Telescope Extension: `ui-select` ~
- No healthcheck provided

==============================================================================
vim.lsp: require("vim.lsp.health").check()

- LSP log level : WARN
- Log path: /home/ekoehler/.local/state/nvim/lsp.log
- Log size: 2227 KB

vim.lsp: Active Clients ~
- volar (id: 1)
    Root directory: ~/Documents/saga/composer
    Command: /home/ekoehler/.local/share/nvim/mason/bin/vue-language-server --stdio
    Settings: vim.empty_dict()
    Attached buffers: 4

vim.lsp: File Watcher ~
- file watching "(workspace/didChangeWatchedFiles)" disabled on all clients

vim.lsp: Position Encodings ~
- No buffers contain mixed position encodings

==============================================================================
vim.treesitter: require("vim.treesitter.health").check()

- Nvim runtime ABI version: 14
- OK Parser: bash                 ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/bash.so
- OK Parser: cpp                  ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/cpp.so
- OK Parser: dockerfile           ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/dockerfile.so
- OK Parser: json                 ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/json.so
- OK Parser: markdown             ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so
- OK Parser: python               ABI: 14, path: /home/ekoehler/.local/share/nvim/lazy/nvim-treesitter/parser/python.so
- OK Parser: bash                 ABI: 14, path: /usr/share/nvim/runtime/parser/bash.so
- OK Parser: c                    ABI: 14, path: /usr/share/nvim/runtime/parser/c.so
- OK Parser: lua                  ABI: 14, path: /usr/share/nvim/runtime/parser/lua.so
- OK Parser: markdown             ABI: 14, path: /usr/share/nvim/runtime/parser/markdown.so
- OK Parser: markdown_inline      ABI: 14, path: /usr/share/nvim/runtime/parser/markdown_inline.so
- OK Parser: python               ABI: 14, path: /usr/share/nvim/runtime/parser/python.so
- OK Parser: query                ABI: 14, path: /usr/share/nvim/runtime/parser/query.so
- OK Parser: vim                  ABI: 14, path: /usr/share/nvim/runtime/parser/vim.so
- OK Parser: vimdoc               ABI: 14, path: /usr/share/nvim/runtime/parser/vimdoc.so

